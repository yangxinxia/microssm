<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	       http://www.springframework.org/schema/beans/spring-beans.xsd
	       http://www.springframework.org/schema/context
	       http://www.springframework.org/schema/context/spring-context.xsd
	       http://www.springframework.org/schema/aop
	       http://www.springframework.org/schema/aop/spring-aop.xsd
	       http://www.springframework.org/schema/tx 
	       http://www.springframework.org/schema/tx/spring-tx.xsd 
	       http://www.springframework.org/schema/mvc 
	       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<context:annotation-config />
  
	<bean class="com.smart.mvc.config.ConfigUtils">
		<property name="fileEncoding" value="UTF-8" />
		<property name="locations">
			<list>
				<!--数据库参数配置 -->
				<value>classpath:jdbc.properties</value>
				<!--服务参数配置(Zookeeper、Dubbo、MQ、Redis相关) -->
				<value>classpath:service.properties</value>

				<!--当前应用参数配置 -->
				<value>classpath:sso-config.properties</value>

				<!-- 配置中心参数配置 -->
				<value>classpath:xxl-conf.properties</value>
				
				<!-- 调度中心参数配置 -->
				<value>classpath:job-executor.properties</value>

			</list>
		</property>
	</bean>


	<!-- ********************************* XXL-CONF 配置工厂 ********************************* -->
	<bean id="xxlConfFactory"
		class="com.xxl.conf.core.spring.XxlConfFactory">
		<!-- 环境配置文件地址，如 "xxl-conf.properties" 或 "file:/data/webapps/xxl-conf.properties" -->
		<property name="adminAddress"
			value="${xxl.conf.admin.address}" />
		<property name="env" value="${xxl.conf.env}" />
		<property name="accessToken" value="${xxl.conf.access.token}" />
		<property name="mirrorfile" value="${xxl.conf.mirrorfile}" />
	</bean>
	<bean id="smartFilter" class="com.smart.sso.client.SmartContainer">
		<property name="ssoServerUrl" value="${sso.server.url}" />
		<property name="exceptUrls" value="${sso.exceptUrls}" />
		<!-- Dubbo服务开启时，打开注释 -->
		<property name="authenticationRpcService" ref="authenticationRpcService" />

		<property name="filters">
			<list>
				<!-- 单点登录 -->
				<bean class="com.smart.sso.client.SsoFilter" />
				<!-- 权限控制(选配) -->
				<bean class="com.smart.sso.client.PermissionFilter">
					<property name="ssoAppCode" value="${sso.app.code}" />
				</bean>
				<!-- 单点退出(选配) -->
				<bean class="com.smart.sso.client.LogoutFilter">
					<property name="pattern" value="/logout" />
					<property name="ssoBackUrl" value="/index" />
				</bean>
			</list>
		</property>
	</bean>
	

    <!-- ********************************* 基础配置 ********************************* -->

	<!-- 配置01、JobHandler 扫描路径 -->
	<context:component-scan base-package="org.boluo.demo.service.jobhandler" />

	<!-- 配置02、执行器 -->
	<bean id="xxlJobSpringExecutor" class="com.xxl.job.core.executor.impl.XxlJobSpringExecutor" init-method="start" destroy-method="destroy" >
		<!-- 执行器注册中心地址[选填]，为空则关闭自动注册 -->
		<property name="adminAddresses" value="${xxl.job.admin.addresses}" />
		<!-- 执行器AppName[选填]，为空则关闭自动注册 -->
		<property name="appName" value="${xxl.job.executor.appname}" />
		<!-- 执行器IP[选填]，为空则自动获取 -->
		<property name="ip" value="${xxl.job.executor.ip}" />
		<!-- 执行器端口号[选填]，小于等于0则自动获取 -->
		<property name="port" value="${xxl.job.executor.port}" />
		<!-- 访问令牌[选填]，非空则进行匹配校验 -->
		<property name="accessToken" value="${xxl.job.accessToken}" />
		<!-- 执行器日志路径[选填]，为空则使用默认路径 -->
		<property name="logPath" value="${xxl.job.executor.logpath}" />
		<!-- 日志保存天数[选填]，值大于3时生效 -->
		<property name="logRetentionDays" value="${xxl.job.executor.logretentiondays}" />
	</bean>

	<!-- 引入Mybatis及数据库相关 -->
	<import resource="applicationContext-mybatis.xml" />

	<!-- 引入服务相关 -->
	<import resource="applicationContext-service.xml" />

	<!-- Dubbo : 为Token验证和授权提供RPC服务，不开启默认Hessian -->
	<import resource="/dubbo/dubbo-consumer.xml" />
	
	<!-- Dubbo : 提供数据字典查询服务 -->
	<!-- <import resource="/dubbo/dubbo-provider.xml" /> -->


	<!-- redis : 用于部署多JVM实例时，RedisSession覆盖HttpSession实现Session共享  -->
	<import resource="classpath:spring-redis-sso.xml" />
	
	<!-- 使用redis -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>
	<bean id="redisCache" class="org.boluo.demo.common.RedisCache">
		<property name="redisTemplate" ref="redisTemplate" />
	</bean>
	<!-- redis锁 -->
	<bean id="redisLock" class="org.boluo.demo.common.RedisLock">
		<property name="redisCache" ref="redisCache" />
	</bean>
		

	<!-- activeMQ : 用于权限有修改时，异步通知应用更新权限  -->
	<!--<import resource="classpath:spring-mq-sso.xml"/> -->
		
</beans>
